/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.server.Index', null, global);
goog.exportSymbol('proto.server.ProductSearchRequest', null, global);
goog.exportSymbol('proto.server.ProductSearchResponse', null, global);
goog.exportSymbol('proto.server.Result', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.server.ProductSearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.server.ProductSearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.server.ProductSearchRequest.displayName =
    'proto.server.ProductSearchRequest';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.server.ProductSearchRequest.prototype.toObject = function(
    opt_includeInstance,
  ) {
    return proto.server.ProductSearchRequest.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.server.ProductSearchRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.server.ProductSearchRequest.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        name: jspb.Message.getFieldWithDefault(msg, 1, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.server.ProductSearchRequest}
 */
proto.server.ProductSearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.server.ProductSearchRequest();
  return proto.server.ProductSearchRequest.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.server.ProductSearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.server.ProductSearchRequest}
 */
proto.server.ProductSearchRequest.deserializeBinaryFromReader = function(
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.server.ProductSearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.server.ProductSearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.server.ProductSearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.server.ProductSearchRequest.serializeBinaryToWriter = function(
  message,
  writer,
) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.server.ProductSearchRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.server.ProductSearchRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.server.ProductSearchResponse = function(opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.server.ProductSearchResponse.repeatedFields_,
    null,
  );
};
goog.inherits(proto.server.ProductSearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.server.ProductSearchResponse.displayName =
    'proto.server.ProductSearchResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.server.ProductSearchResponse.repeatedFields_ = [5];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.server.ProductSearchResponse.prototype.toObject = function(
    opt_includeInstance,
  ) {
    return proto.server.ProductSearchResponse.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.server.ProductSearchResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.server.ProductSearchResponse.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        resultsList: jspb.Message.toObjectList(
          msg.getResultsList(),
          proto.server.Result.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.server.ProductSearchResponse}
 */
proto.server.ProductSearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.server.ProductSearchResponse();
  return proto.server.ProductSearchResponse.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.server.ProductSearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.server.ProductSearchResponse}
 */
proto.server.ProductSearchResponse.deserializeBinaryFromReader = function(
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 5:
        var value = new proto.server.Result();
        reader.readMessage(
          value,
          proto.server.Result.deserializeBinaryFromReader,
        );
        msg.addResults(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.server.ProductSearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.server.ProductSearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.server.ProductSearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.server.ProductSearchResponse.serializeBinaryToWriter = function(
  message,
  writer,
) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.server.Result.serializeBinaryToWriter,
    );
  }
};

/**
 * repeated Result results = 5;
 * @return {!Array<!proto.server.Result>}
 */
proto.server.ProductSearchResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.server.Result>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.server.Result,
    5,
  ));
};

/** @param {!Array<!proto.server.Result>} value */
proto.server.ProductSearchResponse.prototype.setResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};

/**
 * @param {!proto.server.Result=} opt_value
 * @param {number=} opt_index
 * @return {!proto.server.Result}
 */
proto.server.ProductSearchResponse.prototype.addResults = function(
  opt_value,
  opt_index,
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    5,
    opt_value,
    proto.server.Result,
    opt_index,
  );
};

proto.server.ProductSearchResponse.prototype.clearResultsList = function() {
  this.setResultsList([]);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.server.Result = function(opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.server.Result.repeatedFields_,
    null,
  );
};
goog.inherits(proto.server.Result, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.server.Result.displayName = 'proto.server.Result';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.server.Result.repeatedFields_ = [5];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.server.Result.prototype.toObject = function(opt_includeInstance) {
    return proto.server.Result.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.server.Result} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.server.Result.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        productUuid: jspb.Message.getFieldWithDefault(msg, 1, ''),
        category: jspb.Message.getFieldWithDefault(msg, 2, ''),
        name: jspb.Message.getFieldWithDefault(msg, 3, ''),
        uom: jspb.Message.getFieldWithDefault(msg, 4, ''),
        indexesList: jspb.Message.toObjectList(
          msg.getIndexesList(),
          proto.server.Index.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.server.Result}
 */
proto.server.Result.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.server.Result();
  return proto.server.Result.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.server.Result} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.server.Result}
 */
proto.server.Result.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setProductUuid(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setCategory(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setUom(value);
        break;
      case 5:
        var value = new proto.server.Index();
        reader.readMessage(
          value,
          proto.server.Index.deserializeBinaryFromReader,
        );
        msg.addIndexes(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.server.Result.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.server.Result.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.server.Result} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.server.Result.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductUuid();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getUom();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getIndexesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.server.Index.serializeBinaryToWriter,
    );
  }
};

/**
 * optional string product_uuid = 1;
 * @return {string}
 */
proto.server.Result.prototype.getProductUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.server.Result.prototype.setProductUuid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string category = 2;
 * @return {string}
 */
proto.server.Result.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/** @param {string} value */
proto.server.Result.prototype.setCategory = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string name = 3;
 * @return {string}
 */
proto.server.Result.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/** @param {string} value */
proto.server.Result.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string uom = 4;
 * @return {string}
 */
proto.server.Result.prototype.getUom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/** @param {string} value */
proto.server.Result.prototype.setUom = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * repeated Index indexes = 5;
 * @return {!Array<!proto.server.Index>}
 */
proto.server.Result.prototype.getIndexesList = function() {
  return /** @type{!Array<!proto.server.Index>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.server.Index,
    5,
  ));
};

/** @param {!Array<!proto.server.Index>} value */
proto.server.Result.prototype.setIndexesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};

/**
 * @param {!proto.server.Index=} opt_value
 * @param {number=} opt_index
 * @return {!proto.server.Index}
 */
proto.server.Result.prototype.addIndexes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    5,
    opt_value,
    proto.server.Index,
    opt_index,
  );
};

proto.server.Result.prototype.clearIndexesList = function() {
  this.setIndexesList([]);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.server.Index = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.server.Index, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.server.Index.displayName = 'proto.server.Index';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.server.Index.prototype.toObject = function(opt_includeInstance) {
    return proto.server.Index.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.server.Index} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.server.Index.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        index: jspb.Message.getFieldWithDefault(msg, 1, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.server.Index}
 */
proto.server.Index.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.server.Index();
  return proto.server.Index.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.server.Index} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.server.Index}
 */
proto.server.Index.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setIndex(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.server.Index.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.server.Index.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.server.Index} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.server.Index.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
};

/**
 * optional int32 index = 1;
 * @return {number}
 */
proto.server.Index.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/** @param {number} value */
proto.server.Index.prototype.setIndex = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};

goog.object.extend(exports, proto.server);
